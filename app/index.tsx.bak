import { authenticateUser } from "../api/authApi";
import { createSmartWallet } from "../api/walletService";
import { useNavigation } from "@react-navigation/native";
import { NativeStackNavigationProp } from "@react-navigation/native-stack";
import React, { useEffect, useState } from "react";
import {
  ActivityIndicator,
  Alert,
  Image,
  StyleSheet,
  Text,
  TouchableOpacity,
  Vibration,
  View,
} from "react-native";

// Define TypeScript types for navigation
type RootStackParamList = {
  Home: { walletAddress?: string; user?: any };
  ImportWallet: undefined;
  CreateWallet: undefined;
  EnterPassword: undefined;
};

export default function WelcomeScreen() {
  const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();

  const [loading, setLoading] = useState<boolean>(false);
  const [authLoading, setAuthLoading] = useState<boolean>(false);
  const [initialLoading, setInitialLoading] = useState<boolean>(true);

  /**
   * ✅ Check Authentication Status on Load
   */
  useEffect(() => {
    const checkUser = async () => {
      setInitialLoading(true);
      const authData = await authenticateUser();

      if (!authData?.isAuthenticated) {
        // If user is not authenticated, send them to Import Wallet screen
        navigation.replace("ImportWallet");
      } else if (!authData.hasClassicWallet && !authData.hasSmartWallet) {
        // If user has no wallet at all, send them to Create Wallet screen
        navigation.replace("CreateWallet");
      } else if (authData.hasClassicWallet) {
        // If user has a Classic Wallet, send them to Enter Password screen
        navigation.replace("EnterPassword");
      } else if (authData.hasSmartWallet) {
        // If user has a Smart Wallet, send them directly to Home
        navigation.replace("Home", { walletAddress: authData.smartWalletAddress, user: authData.user });
      }

      setInitialLoading(false);
    };

    checkUser();
  }, []);

  /**
   * ✅ One-Tap Wallet Creation (Smart Wallet)
   */
  const handleOneTapWallet = async () => {
    Vibration.vibrate(50);
    setLoading(true);
    try {
      const { address } = await createSmartWallet();
      navigation.replace("Home", { walletAddress: address });
    } catch (error) {
      console.error("Wallet creation failed", error);
      Alert.alert("Error", "Failed to create wallet. Please try again.");
    }
    setLoading(false);
  };

  /**
   * ✅ Google Sign-In & Authentication
   */
  const handleGoogleSignIn = async () => {
    Vibration.vibrate(50);
    setAuthLoading(true);
    try {
      const user = await authenticateUser();
      console.log("User authenticated:", user);
      navigation.replace("Home", { user });
    } catch (error) {
      console.error("Authentication failed", error);
      Alert.alert("Error", "Google Sign-In failed. Please try again.");
    }
    setAuthLoading(false);
  };

  // Show loading screen while authentication is checked
  if (initialLoading) {
    return (
      <View style={{ flex: 1, justifyContent: "center", alignItems: "center" }}>
        <ActivityIndicator size="large" />
      </View>
    );
  }

  return (
    <View style={styles.container}>
      <View style={styles.innerContainer}>
        <View style={styles.logoWrapper}>
          <Image
            source={{ uri: "https://ucarecdn.com/01703024-c05c-458d-9cc7-347c1e14d4ef/-/format/auto/" }}
            style={styles.logo}
            resizeMode="contain"
          />
        </View>

        <Text style={styles.title}>Welcome to Your Crypto Wallet</Text>
        <Text style={styles.subtitle}>Instant access to the world of digital assets</Text>

        <View style={styles.buttonContainer}>
          {/* One-Tap Wallet Button */}
          <TouchableOpacity style={styles.primaryButton} onPress={handleOneTapWallet} disabled={loading}>
            {loading ? <ActivityIndicator color="white" /> : <Text style={styles.buttonText}>One-Tap Create Wallet</Text>}
          </TouchableOpacity>

          {/* Google Sign-In Button */}
          <TouchableOpacity style={styles.authButton} onPress={handleGoogleSignIn} disabled={authLoading}>
            {authLoading ? <ActivityIndicator color="white" /> : <Text style={styles.buttonText}>Sign In with Google</Text>}
          </TouchableOpacity>

          {/* Advanced Setup */}
          <TouchableOpacity style={styles.secondaryButton} onPress={() => navigation.navigate("ImportWallet")}>
            <Text style={styles.buttonText}>Advanced Setup</Text>
          </TouchableOpacity>
        </View>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: "#0A1B3F", justifyContent: "center", alignItems: "center", padding: 16 },
  innerContainer: { maxWidth: 400, width: "100%", alignItems: "center" },
  logoWrapper: { width: 80, height: 80, backgroundColor: "#1A2F6C", borderRadius: 16, justifyContent: "center", alignItems: "center", marginBottom: 24 },
  logo: { width: 56, height: 56 },
  title: { fontSize: 22, fontWeight: "bold", color: "white", textAlign: "center", marginBottom: 8 },
  subtitle: { fontSize: 16, color: "#6A9EFF", textAlign: "center", marginBottom: 24 },
  buttonContainer: { width: "100%" },
  primaryButton: { backgroundColor: "#1A2F6C", paddingVertical: 14, borderRadius: 12, alignItems: "center", width: "100%", marginBottom: 12 },
  authButton: { backgroundColor: "#4285F4", paddingVertical: 14, borderRadius: 12, alignItems: "center", width: "100%", marginBottom: 12 },
  secondaryButton: { backgroundColor: "rgba(255, 255, 255, 0.1)", paddingVertical: 14, borderRadius: 12, alignItems: "center", width: "100%" },
  buttonText: { fontSize: 16, fontWeight: "600", color: "white" },
});

